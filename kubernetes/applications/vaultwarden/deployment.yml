apiVersion: v1
kind: PersistentVolume
metadata:
  name: vaultwarden-volume
  labels:
    app: vaultwarden
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "/srv/vaultwarden"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - koto
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-volume-claim
spec:
  volumeName: vaultwarden-volume
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: vaultwarden
  replicas: 1
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
        - name: vaultwarden
          image: vaultwarden/server:1.30.5-alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: SIGNUPS_ALLOWED
              value: "false"
          volumeMounts:
            - mountPath: "/data"
              name: vaultwarden-volume-mount
      volumes:
        - name: vaultwarden-volume-mount
          persistentVolumeClaim:
            claimName: vaultwarden-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
spec:
  type: ClusterIP
  selector:
    app: vaultwarden
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vaultwarden
spec:
  routes:
    - kind: Rule
      match: Host(`vw.riichi.me`)
      priority: 10
      services:
        - name: vaultwarden
          port: 80
